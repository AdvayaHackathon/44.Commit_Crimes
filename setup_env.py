import secrets
import getpass
from urllib.parse import quote_plus

def setup_env():
    """Set up the .env file with user-provided values"""
    print("Environment Setup")
    print("----------------")

    # Generate a secure secret key
    secret_key = secrets.token_hex(16)

    # Get database connection parameters
    db_host = input("Enter database host (default: localhost): ") or "localhost"
    db_user = input("Enter database username (default: postgres): ") or "postgres"
    db_password = getpass.getpass("Enter database password: ")
    db_name = input("Enter database name (default: user_dashboard): ") or "user_dashboard"

    # URL encode the password for the connection string
    encoded_password = quote_plus(db_password)

    # Create the .env file content
    env_content = f"""# Generated by setup_env.py
# Secret key for session management
SECRET_KEY={secret_key}

# Database connection parameters
DB_HOST={db_host}
DB_USER={db_user}
DB_PASSWORD={db_password}
DB_NAME={db_name}
DATABASE_URL=postgresql://{db_user}:{encoded_password}@{db_host}/{db_name}
"""

    # Write to .env file
    with open(".env", "w") as f:
        f.write(env_content)

    print("\nâœ… .env file has been created successfully!")
    print("\nNext steps:")
    print("1. Run 'python init_db.py' to set up the database")
    print("2. Run 'python app.py' to start the application")

if __name__ == "__main__":
    setup_env()
